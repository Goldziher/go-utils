name: ci
on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - main
jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Setup Golang
        uses: actions/setup-go@v6
        with:
          go-version: "1.25"
      - name: Install prek and ai-rulez
        run: |
          uv tool install prek
          uv tool install ai-rulez
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Load Cached Prek Dependencies
        id: cached-prek-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/prek/
          key: prek|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Execute Prek
        run: prek run --show-diff-on-failure --color=always --all-files
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: "1.25"
      - name: Load cached dependencies
        id: cached-go-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ inputs.go_version }}-v1.0-${{ hashFiles('**/go.sum') }}
      - name: Install dependencies
        if: steps.cached-go-dependencies.outputs.cache-hit != 'true'
        shell: bash
        run: go get -v -t ./...
      - name: Run Tests
        run: go test -coverprofile=coverage.out ./...
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./coverage.out
